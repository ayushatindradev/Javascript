// // ✅ Stage 3: Advanced JavaScript
// // console.log(this)

// // let user ={
// //     name:"ayush",
// //     greet:function (){
// //         console.log("hi",this.name);
// //     }
// // };
// // user.greet();


// // 2. 🧠 Closures (Super Important for Interviews)

// // clouser= a function that remembers variable from its outer scope 

// // function outer(){
// //     let name= "ayush";
// //     return function inner(){
// //         console.log("hi",name)
// //     }
// // }
// // let innerFunc= outer();
// // innerFunc();


// // 3. 🧬 Prototypes & Inheritance

// // let person = {
// //     greet:function (){
// //         console.log("hello");
// //     }
// // };

// // let student = Object.create(person);
// // student.name="ayush";
// // student.greet();
// // console.log(student);


// // 4. 🚀 ES6+ Features (Modern JS)
// // let name = "ayush";
// // console.log(`hello ${name}`);

// // let user ={
// //     name:"ayush",
// //     age:12
// // }
// // let {name,age}=user
// // console.log(name,age);

// // ✅ Spread & Rest:
// let arr=[1,2,34];
// let newArr=[...arr];
// function sum(...num){
//     return num.reduce((a,b)=>a+b)

// }
// console.log(sum(...arr))

// 5. ⚙️ call(), apply(), bind()
function greet(){
    console.log("hi "+ this.name)
}
let user= {
    name:"ayush"
}

// greet.call(user);
// greet.apply(user);

// let name= greet.bind(user);
// name();

// function fetchData(callback){
//     setTimeout(()=>{
//         callback("Data fetched")
//     },2000)
// }
// fetchData((message)=>{
//     console.log(message)
// })

// ✅ 3. async / await:

// function delay(){
//     return new Promise(res=> setTimeout(()=>res("Done"),1000));
// }

// async function fetchDataAsync(){
//     let data = await delay();
//     console.log(data)
// }

// fetch("https://api.github.com/users/ayush")
// .then(res=>res.json());
// .then(data=>console.log(data));

// Modules in js 
export function add(a,b){
    return a+b;
}

import {add} from './math.js';
console.log(add(2,3));
